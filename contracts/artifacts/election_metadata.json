{
	"compiler": {
		"version": "0.8.21+commit.d9974bed"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "CandidateList",
				"outputs": [
					{
						"internalType": "address",
						"name": "candidateAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "proposal",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "register",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "votes",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_candidateAddress",
						"type": "address"
					}
				],
				"name": "CastVote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "VoterList",
				"outputs": [
					{
						"internalType": "address",
						"name": "voterAddress",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "register",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "voted",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "isDelegateVote",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "transferedVote",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "allCandidates",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "candidateAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "proposal",
								"type": "string"
							},
							{
								"internalType": "bool",
								"name": "register",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "votes",
								"type": "uint256"
							}
						],
						"internalType": "struct election.candidates[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "allVoters",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "voterAddress",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "register",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "voted",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isDelegateVote",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "transferedVote",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							}
						],
						"internalType": "struct election.voters[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_delegate",
						"type": "address"
					}
				],
				"name": "delegateVote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "endVoting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_proposal",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "_candidateAddress",
						"type": "address"
					}
				],
				"name": "registerCandidate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_voterAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"name": "registerVoter",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startVoting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "votingStatus",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "winnerDeclare",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/votingInBlockchain.sol": "election"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/votingInBlockchain.sol": {
			"keccak256": "0xb53e2e5ddd3bbab9a2222c25323e076332f44b4512969a8b8f86e873f888f747",
			"license": "MIT",
			"urls": [
				"bzz-raw://713e12d64fe660549e0de65d960fc2f43d75d1562e9023ae96ee13e07fc144a4",
				"dweb:/ipfs/QmVejKRTfkEnKuL9xavZoeWAsJyNyVZWDpbpKMyKBNdZNM"
			]
		}
	},
	"version": 1
}